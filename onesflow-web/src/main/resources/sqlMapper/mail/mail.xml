<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--CREATE TABLE `mail_record` (
  `id`             BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type`           TINYINT(1)     NOT NULL,
  `content`        VARCHAR(1024) NOT NULL,
  `gmt_create`     DATETIME        NOT NULL,
  `gmt_modified`   DATETIME        NOT NULL,
  PRIMARY KEY (`id`)
)
  DEFAULT CHARACTER SET = utf8;-->
<mapper namespace="com.thenorthw.onesflow.common.dao.mail.MailDao">
    <resultMap id="MailRecordMaps" type="MailRecord">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <id property="toUser" column="to_user" jdbcType="BIGINT"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="gmtCreate" column="gmt_create" jdbcType="TIMESTAMP"/>
        <result property="gmtModified" column="gmt_modified" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="fullColumns">
        `id`,
        `to_user`,
        `type`,
        `content`,
        `gmt_create`,
        `gmt_modified`
    </sql>

    <insert id="addMailRecord" parameterType="MailRecord" useGeneratedKeys="true" keyProperty="id">
      INSERT INTO mail_record(
        `id`,
        `to_user`,
        `type`,
        `content`,
        `gmt_create`,
        `gmt_modified`)
      VALUES (#{id},#{toUser},#{type},#{content},#{gmtCreate},#{gmtModified})
    </insert>

    <select id="getMailRecordByToUserAndType" resultMap="MailRecordMaps" >
      select
        `id`,
        `to_user`,
        `type`,
        `content`,
        `gmt_create`,
        `gmt_modified`
      from mail_record
      where to_user=#{id} AND type = ${type}
      ORDER BY gmt_create DESC
      LIMIT 0, 1;
    </select>
    <!--<select id="getUserProfileByUserId" parameterType="long" resultType="User">-->
        <!--SELECT-->
        <!--<include refid="infoColumns"/>-->
        <!--FROM user WHERE id=#{id}-->
    <!--</select>-->

    <!--<select id="getUserProfileByUserIds" resultMap="UserMaps">-->
        <!--SELECT-->
        <!--<include refid="infoColumns"/>-->
        <!--FROM user WHERE id IN-->
        <!--<foreach collection="userIds" item="id" open="(" close=")"-->
                 <!--separator=",">-->
            <!--#{id}-->
        <!--</foreach>-->
    <!--</select>-->
    <!--&lt;!&ndash;<select id="getUserByNick" parameterType="string" resultType="User">&ndash;&gt;-->
        <!--&lt;!&ndash;select * from user_profile where nick=#{nick}&ndash;&gt;-->
    <!--&lt;!&ndash;</select>&ndash;&gt;-->

    <!--&lt;!&ndash;更新信息&ndash;&gt;-->
    <!--&lt;!&ndash;<update id="activateUser" parameterType="User">&ndash;&gt;-->
      <!--&lt;!&ndash;UPDATE users SET activated_time = #{activated_time} WHERE loginname = #{loginanme};&ndash;&gt;-->
    <!--&lt;!&ndash;</update>&ndash;&gt;-->
    <!--<update id="updateUserProfile" parameterType="User">-->
        <!--UPDATE user-->
        <!--SET  nick = #{nick} , sex = #{sex} , introduction = #{introduction}, gmt_modified = #{gmtModified}-->
        <!--WHERE id = #{id}-->
    <!--</update>-->

</mapper>